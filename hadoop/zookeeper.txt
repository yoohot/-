概述：

1分布式协调框架；从设计角度理解它是一个基于观察者模式对分布式服务管理框架；
2特点：
 一个领导者，多个跟随者组成集群
 集群中只要半数以上节点存活，zk集群就能正常服务，适合奇数集群
 全局数据一致，每个server保存一份相同对数据，client无论连哪一个都是一致对
 来自同一个client端对更新请求按照其发送顺序一次执行
 数据更新原子性
 实时性，一定时间内，client能读到最新到数据
3数据结构
 zk数据结构与unix文件系统类似，整体可看作一棵树，每个节点称为一个znode，znode默认能够存储1M大小
数据，每个znode都可以通过其路径唯一标示
4应用场景
统一命名服务，统一配置管理，统一集群管理，服务器节点动态上下线，软负载均衡等

4安装
 1本地模式，clientPort=2181
 2参数配置

内部原理：
1选举机制
2节点znode类型：
 短暂和持久节点两种-》客户端与服务端断开后，节点是否删除 
 znode有四中形式对目录节点
 a 持久化目录节点 persistent 默认
 b持久化顺序编号目录节点 persistent_sequential
 c临时目录节点：客户端断开后节点删除
 d临时顺序编号目录节点

实战
1完全分布式安装
 配置：zoo.cfg dataDir和集群主机；dataDir下myid
2客户端操作命令（客户端命令模式下）
 help 显示所有命令
 ls /  显示当前znode下znode ls2 显示详细信息 ls / watch 监听子节点变化，一次（非阻塞）
 create /text data 创建节点，必须带有数据才会成功  create -e 创建短暂节点
 get /test 获取test节点内容  get /test watch 监听这个节点一次（非阻塞）
 set /test data 设置test节点数据
 delete /test 删除节点； rmr /test 
 
 
 
