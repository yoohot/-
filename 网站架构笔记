第一章 SOA
Zookeeper：实现了一个层次命名空间的数据模型，它的每个节点称为znode，znode下可以包含一部分数据和子节点；当数据发生变化或子节点发生变化，会触发watch机制，会发出相应的通知给订阅了其状态变化的客户端
节点分为持久和非持久：创建的客户端断开连接后是否删除
java api zkClient
做为注册中心：分为三层 ，根节点（第一层）->服务名（第二层）->服务地址节点（第三层）；前两层持久节点，服务地址节点非持久节点

第二章 基础设施
分布式系统基础设施：分布式协作及配置管理系统如zookeeper，分布式缓存系统，持久化存储系统，分布式消息系统mq，搜索引擎，cdn系统，负载均衡系统，运维自动化系统，实时计算系统，离线计算系统，分布式文件系统，日志收集系统，监控系统，数据仓库等；

mysql：主从复制，通过binary log在master->slave中同步：可以使statement level（sql语句，日志量少）或row level（行数据，日志量大）两种方式；为了避免master的单点故障 ，一般采用dual master，即双master，两台mysql互相作为对方的master，这样会导致两个同时更新某个数据时导致被覆盖的情况， dual master并不是提供双master写服务，而是一台提供写服务，另一个stand by或作为读库开放以避免写入冲突，防止不一致情况；master间写切换步骤：略
分表分库:

